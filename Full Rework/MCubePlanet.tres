[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://d3fmoitcbikg1"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mj0x0"]
expanded_output_ports = [0]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kp0wj"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lr7w1"]
input_name = "inv_view_matrix"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_g54gd"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// Input:2
	vec3 n_out2p0 = NORMAL;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// VectorCompose:5
	float n_in5p3 = 0.00000;
	vec4 n_out5p0 = vec4(n_out2p1, n_out2p2, n_out2p3, n_in5p3);


// VectorOp:3
	vec4 n_in3p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out3p0 = n_out5p0 * n_in3p1;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}
"
modes/cull = 2
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_mj0x0")
nodes/fragment/2/position = Vector2(-820, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_kp0wj")
nodes/fragment/3/position = Vector2(80, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_lr7w1")
nodes/fragment/4/position = Vector2(-760, 460)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorCompose_g54gd")
nodes/fragment/5/position = Vector2(-240, 220)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 5, 0, 3, 0, 2, 1, 5, 0, 2, 2, 5, 1, 2, 3, 5, 2)
